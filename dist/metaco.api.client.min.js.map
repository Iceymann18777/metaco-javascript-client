{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib/MetacoClientBuilder.js","metaco.api.client.min.js","lib/MetacoClientBuilderFactory.js","lib/client/MetacoClient.js","lib/errors/ErrorHandler.js","lib/errors/MetacoErrors.js","lib/http/BrowserHttpClient.js","lib/index_browser.js","lib/utils/Extensions.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","MetacoClientBuilder","HttpClient","this","MetacoClient","prototype","withApiUrl","apiUrl","metacoApiUrl","withApiId","apiId","metacoApiId","withApiKey","apiKey","metacoApiKey","withTestingMode","testingMode","metacoTestingMode","makeClient","./client/MetacoClient",2,"MetacoClientBuilderFactory","makeClientBuilderWithHttpClient","httpClient","./MetacoClientBuilder",3,"extensions","registerAccount","request","callback","getAccountStatus","confirmPhoneNumber","getAssets","doGet","getAsset","ticker","formatString","getAssetsHistory","from","to","freq","asc","tickers","tickerStr","url","getAssetHistory","createOrder","getOrders","getOrder","id","submitSignedOrder","rawTransaction","cancelOrder","createTransaction","newTransaction","broadcastTransaction","getWalletDetails","address","getLatestDebugData","../utils/Extensions",4,"hasError","httpCode","jsonContent","httpOkRegex","test","toString","makeError","statusCode","content","originalError","errorType","MetacoErrors","ErrorHandler","httpServerErrorRegex","handleError","textContent","metacoErrorType","JSON","parse","values","hasOwnProperty","metaco_error","keys","type","NOT_FOUND","UNAUTHORIZED","UNKNOWN_ERROR","SERVER_ERROR","./MetacoErrors",5,"reverseKeys","original","key","INVALID_INPUT","API_CALLS_QUOTA_EXCEEDED","SMS_SENDING_FAILED","PHONE_CONFIRMATION_NOT_FOUND","INVALID_CONFIRMATION_CODE","ORDER_NOT_FOUND","NOT_ENOUGH_FUNDS","ORDER_TOO_SMALL","ORDER_COUNT_LIMIT_EXCEEDED","YEARLY_TRANSACTION_QUOTA_EXCEEDED","MAXIMUM_TRANSACTION_AMOUNT_EXCEEDED","ORDER_NOT_CANCELLABLE",6,"BrowserHttpClient","getAbsoluteUri","relativeUri","getHeaders","headers","push","name","value","doAjaxRequest","relativeUrl","dataObject","absoluteUrl","jsonData","stringify","x","window","XMLHttpRequest","ActiveXObject","open","header","setRequestHeader","onreadystatechange","readyState","text","responseText","error","status","send","doPost","doDelete","../errors/ErrorHandler",7,"GetClientBuilder","__window__","metaco","./MetacoClientBuilderFactory","./errors/MetacoErrors","./http/BrowserHttpClient",8,"template","arguments","regexp","RegExp","replace"],"mappings":"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","file":"metaco.api.client.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var MetacoClient = require(\"./client/MetacoClient\");\r\n\r\nfunction MetacoClientBuilder(HttpClient) {\r\n    this.HttpClient = HttpClient;\r\n}\r\n\r\nMetacoClientBuilder.prototype.withApiUrl = function(apiUrl) {\r\n    this.metacoApiUrl = apiUrl;\r\n    return this;\r\n};\r\n\r\nMetacoClientBuilder.prototype.withApiId = function(apiId) {\r\n    this.metacoApiId = apiId;\r\n    return this;\r\n};\r\n\r\nMetacoClientBuilder.prototype.withApiKey = function(apiKey) {\r\n    this.metacoApiKey = apiKey;\r\n    return this;\r\n};\r\n\r\nMetacoClientBuilder.prototype.withTestingMode = function(testingMode) {\r\n    this.metacoTestingMode = testingMode;\r\n    return this;\r\n};\r\n\r\nMetacoClientBuilder.prototype.makeClient = function() {\r\n    return new MetacoClient(this.HttpClient, this.metacoApiUrl, this.metacoApiId, this.metacoApiKey, this.metacoTestingMode);\r\n};\r\n\r\nmodule.exports = MetacoClientBuilder;",null,"var MetacoClientBuilder = require(\"./MetacoClientBuilder\");\r\n\r\nfunction MetacoClientBuilderFactory() {}\r\n\r\nMetacoClientBuilderFactory.prototype.makeClientBuilderWithHttpClient = function(httpClient) {\r\n    return new MetacoClientBuilder(httpClient);\r\n};\r\n\r\nmodule.exports = MetacoClientBuilderFactory;","var extensions = require(\"../utils/Extensions\");\r\n\r\nfunction MetacoClient(HttpClient, metacoApiUrl, metacoApiId, metacoApiKey, metacoTestingMode) {\r\n    this.metacoApiId = metacoApiId;\r\n    this.metacoApiKey = metacoApiKey;\r\n    this.metacoApiUrl = metacoApiUrl;\r\n    this.metacoTestingMode = metacoTestingMode;\r\n\r\n    this.httpClient = new HttpClient(this.metacoApiUrl, this.metacoApiId, this.metacoApiKey, this.metacoTestingMode);\r\n}\r\n\r\nMetacoClient.prototype.registerAccount = function(request, callback) {\r\n\r\n};\r\nMetacoClient.prototype.getAccountStatus = function(callback) {\r\n\r\n};\r\nMetacoClient.prototype.confirmPhoneNumber = function(request, callback) {\r\n\r\n};\r\n\r\nMetacoClient.prototype.getAssets = function(callback) {\r\n    this.httpClient.doGet(\"assets\", callback);\r\n};\r\n\r\nMetacoClient.prototype.getAsset = function(ticker, callback) {\r\n    this.httpClient.doGet(extensions.formatString(\"assets/{0}\", ticker), callback);\r\n};\r\n\r\nMetacoClient.prototype.getAssetsHistory = function(from, to, freq, asc, tickers, callback) {\r\n    var tickerStr = \"\";\r\n    if (tickers == null) {\r\n        tickerStr = \"all\";\r\n    } else if (typeof(tickers) !== \"string\") {\r\n        for (var i = 0; i < tickers.length; i++) {\r\n            tickerStr += tickers[i];\r\n            if (i < tickers.length - 1) {\r\n                tickerStr += \",\";\r\n            }\r\n        }\r\n    } else {\r\n        tickerStr = tickers;\r\n    }\r\n\r\n    var url = extensions.formatString(\"assets/history?underlyings={0}&from={1}&to={2}&freq={3}&orderAsc={4}\", tickerStr, from, to, freq, asc);\r\n\r\n    this.httpClient.doGet(url, callback);\r\n\r\n};\r\nMetacoClient.prototype.getAssetHistory = function(from, to, freq, asc, tickers, callback) {\r\n    this.getAssetsHistory(from, to, freq, asc, tickers, callback);\r\n};\r\nMetacoClient.prototype.createOrder = function(createOrder, callback) {\r\n\r\n};\r\nMetacoClient.prototype.getOrders = function(callback) {\r\n\r\n};\r\nMetacoClient.prototype.getOrder = function(id, callback) {\r\n\r\n};\r\nMetacoClient.prototype.submitSignedOrder = function(id, rawTransaction, callback) {\r\n\r\n};\r\nMetacoClient.prototype.cancelOrder = function(id, callback) {\r\n\r\n};\r\nMetacoClient.prototype.createTransaction = function(newTransaction, callback) {\r\n\r\n};\r\nMetacoClient.prototype.broadcastTransaction = function(rawTransaction, callback) {\r\n\r\n};\r\nMetacoClient.prototype.getWalletDetails = function(address, callback) {\r\n\r\n};\r\nMetacoClient.prototype.getLatestDebugData = function(callback) {\r\n\r\n};\r\n\r\nmodule.exports = MetacoClient;","var MetacoErrors = require (\"./MetacoErrors\");\r\n\r\nvar ErrorHandler = {};\r\n\r\nvar httpOkRegex = /^2[0-9]{2}/;\r\nvar httpServerErrorRegex = /^2[0-9]{2}/;\r\n\r\nfunction hasError(httpCode, jsonContent) {\r\n    return !httpOkRegex.test(httpCode.toString());\r\n}\r\n\r\nfunction makeError(statusCode, content, originalError, errorType) {\r\n    return {\r\n        statusCode: statusCode,\r\n        content: content,\r\n        originalError: originalError,\r\n        errorType: errorType\r\n    }\r\n}\r\n\r\nErrorHandler.handleError = function (httpCode, textContent) {\r\n\r\n    var jsonContent = null;\r\n    var metacoErrorType = null;\r\n\r\n    try {\r\n        jsonContent = JSON.parse(textContent);\r\n    } catch (e) {\r\n        jsonContent = null;\r\n    }\r\n\r\n    if (!hasError(httpCode, jsonContent)) {\r\n        return null;\r\n    }\r\n\r\n    if (MetacoErrors.values.hasOwnProperty(jsonContent.metaco_error)) {\r\n        metacoErrorType = MetacoErrors.keys[MetacoErrors.values[jsonContent.metaco_error]];\r\n    } else {\r\n        if (httpCode == 404) {\r\n            type = MetacoErrors.keys.NOT_FOUND;\r\n        } else if (httpCode == 401) {\r\n            type = MetacoErrors.keys.UNAUTHORIZED;\r\n        } else if (!httpServerErrorRegex.test(httpCode.toString())) {\r\n            type = MetacoErrors.keys.SERVER_ERROR;\r\n        } else {\r\n            type = MetacoErrors.keys.UNKNOWN_ERROR;\r\n        }\r\n    }\r\n\r\n    return makeError(httpCode, textContent, jsonContent, metacoErrorType);\r\n};\r\n\r\nmodule.exports = ErrorHandler;","var keys = {\r\n\r\n    INVALID_INPUT: \"invalid_input\",\r\n    API_CALLS_QUOTA_EXCEEDED: \"api_calls_quota_exceeded\",\r\n    SMS_SENDING_FAILED: \"sms_sending_failed\",\r\n    PHONE_CONFIRMATION_NOT_FOUND: \"phone_confirmation_not_found\",\r\n    INVALID_CONFIRMATION_CODE: \"invalid_confirmation_code\",\r\n    ORDER_NOT_FOUND: \"order_not_found\",\r\n    NOT_ENOUGH_FUNDS: \"not_enough_funds\",\r\n    ORDER_TOO_SMALL: \"order_too_small\",\r\n    ORDER_COUNT_LIMIT_EXCEEDED: \"order_count_limit_exceeded\",\r\n    YEARLY_TRANSACTION_QUOTA_EXCEEDED: \"yearly_transaction_quota_exceeded\",\r\n    MAXIMUM_TRANSACTION_AMOUNT_EXCEEDED: \"maximum_transaction_amount_exceeded\",\r\n    ORDER_NOT_CANCELLABLE: \"order_not_cancellable\",\r\n    UNAUTHORIZED: \"unauthorized\",\r\n    NOT_FOUND: \"notfound\",\r\n    SERVER_ERROR: \"servererror\",\r\n    UNKNOWN_ERROR: \"unknownerror\"\r\n};\r\n\r\nfunction reverseKeys(original) {\r\n    var values = {};\r\n\r\n    for (var key in keys) {\r\n        if (keys.hasOwnProperty(key)) {\r\n            values[original[key]] = key;\r\n        }\r\n    }\r\n\r\n    return values;\r\n}\r\n\r\nvar values = reverseKeys(keys);\r\n\r\nmodule.exports = {\r\n    keys: keys,\r\n    values: values\r\n};","var ErrorHandler = require(\"../errors/ErrorHandler\");\r\n\r\nfunction BrowserHttpClient(metacoApiUrl, metacoApiId, metacoApiKey, metacoTestingMode) {\r\n    this.metacoApiId = metacoApiId;\r\n    this.metacoApiKey = metacoApiKey;\r\n    this.metacoApiUrl = metacoApiUrl;\r\n    this.metacoTestingMode = metacoTestingMode;\r\n\r\n    this.getAbsoluteUri = function (relativeUri) {\r\n        return this.metacoApiUrl + relativeUri;\r\n    };\r\n\r\n    this.getHeaders = function () {\r\n        var headers = [];\r\n\r\n        headers.push({name: \"X-Requested-With\", value: \"XMLHttpRequest\"});\r\n        headers.push({name: \"Content-type\", value: \"application/json\"});\r\n\r\n        if (this.metacoApiId && this.metacoApiId !== \"\" &&\r\n            this.metacoApiKey && this.metacoApiKey !== \"\") {\r\n            headers.push({name: \"X-Metaco-Id\", value: this.metacoApiId});\r\n            headers.push({name: \"X-Metaco-Key\", value: this.metacoApiKey});\r\n        }\r\n\r\n        if (this.metacoTestingMode) {\r\n            headers.push({name: \"X-Metaco-Debug\", value: true});\r\n        }\r\n\r\n        return headers;\r\n    };\r\n\r\n    this.doAjaxRequest = function (type, relativeUrl, callback, dataObject) {\r\n        try {\r\n\r\n            var headers = this.getHeaders();\r\n            var absoluteUrl = this.getAbsoluteUri(relativeUrl);\r\n            var jsonData = JSON.stringify(dataObject);\r\n\r\n            var x = new(window.XMLHttpRequest || ActiveXObject)('MSXML2.XMLHTTP.3.0');\r\n\r\n            x.open(type, absoluteUrl, 1);\r\n\r\n            for(var header in headers) {\r\n                if (headers.hasOwnProperty(header)) {\r\n                    x.setRequestHeader(header.name, header.value);\r\n                }\r\n            }\r\n\r\n            x.onreadystatechange = function () {\r\n                if (x.readyState > 3) {\r\n                    var text = x.responseText;\r\n\r\n                    var error = ErrorHandler.handleError(x.status, text);\r\n\r\n                    if (error) {\r\n                        callback(error, null);\r\n                    } else {\r\n                        callback(error, JSON.parse(text));\r\n                    }\r\n                }\r\n            };\r\n\r\n            x.send(jsonData)\r\n\r\n        } catch (e) {\r\n            var error = ErrorHandler.handleError(null, e.toString());\r\n            callback(error, null);\r\n        }\r\n    }\r\n}\r\n\r\nBrowserHttpClient.prototype.doGet = function (relativeUrl, callback) {\r\n    return this.doAjaxRequest(\"GET\", relativeUrl, callback, null);\r\n};\r\n\r\nBrowserHttpClient.prototype.doPost = function (relativeUrl, dataObject, callback) {\r\n    return this.doAjaxRequest(\"POST\", relativeUrl, callback, dataObject);\r\n};\r\n\r\nBrowserHttpClient.prototype.doDelete = function (relativeUrl, callback) {\r\n    return this.doAjaxRequest(\"DELETE\", relativeUrl, callback, null);\r\n};\r\n\r\nmodule.exports = BrowserHttpClient;","var MetacoClientBuilderFactory = require (\"./MetacoClientBuilderFactory\");\r\nvar HttpClient = require(\"./http/BrowserHttpClient\");\r\nvar MetacoErrors = require(\"./errors/MetacoErrors\");\r\n\r\n\r\nfunction GetClientBuilder() {\r\n    return new MetacoClientBuilderFactory().makeClientBuilderWithHttpClient(HttpClient);\r\n}\r\n\r\n(function (__window__) {\r\n    __window__.metaco = __window__.metaco || {};\r\n    __window__.metaco.GetClientBuilder = GetClientBuilder;\r\n    __window__.metaco.MetacoErrors = MetacoErrors.keys;\r\n}(window));","var extensions = {};\r\n\r\nextensions.formatString = function(template) {\r\n    for (var i = 0; i < arguments.length - 1; i++) {\r\n        var regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        template = template.replace(regexp, arguments[i + 1]);\r\n    }\r\n    return template;\r\n};\r\n\r\nmodule.exports = extensions;"],"sourceRoot":"/source/"}