{"version":3,"sources":["http/HttpClient.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;QAGa,UAAU;AACR,iBADF,UAAU,CACP,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,iBAAiB,EAAE;kCAD/D,UAAU;;AAEf,gBAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,gBAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,gBAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,gBAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;SAC9C;;qBANQ,UAAU;;mBAQd,eAAC,GAAG,EAAE;;AAEP,oBAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,uBAAO,gBAdP,OAAO,CAcY,UAAU,OAAO,EAAE,MAAM,EAAE;AAC1C,wCACK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CACrB,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CACtB,GAAG,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE;AACrB,4BAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;AACpB,kCAAM,EAAE,CAAC;yBACZ,MAAM;AACH,mCAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;yBACjC;qBACJ,CAAC,CAAC;iBACV,CAAC,CAAC;aACN;;;mBAEK,gBAAC,GAAG,EAAE,IAAI,EAAE;AACd,uBAAO,gBA7BP,OAAO,CA6BY,UAAU,OAAO,EAAE,MAAM,EAAE;AAC1C,wCACK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CACtB,IAAI,CAAC,IAAI,CAAC,CACV,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CACtB,GAAG,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE;AACrB,4BAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;AACpB,kCAAM,EAAE,CAAC;yBACZ,MAAM;AACH,mCAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;yBACjC;qBACJ,CAAC,CAAC;iBACV,CAAC,CAAC;aACN;;;mBAEO,kBAAC,GAAG,EAAE;AACV,uBAAO,gBA7CP,OAAO,CA6CY,UAAU,OAAO,EAAE,MAAM,EAAE;AAC1C,iDACW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CACnB,GAAG,CAAC,UAAU,EAAE,CAAC,CACjB,GAAG,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE;AACrB,4BAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;AACpB,kCAAM,EAAE,CAAC;yBACZ,MAAM;AACH,mCAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;yBACjC;qBACJ,CAAC,CAAC;iBACV,CAAC,CAAC;aACN;;;mBAEK,gBAAC,YAAY,EAAE;AACjB,uBAAO,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;aAC3C;;;mBAES,sBAAG;AACT,oBAAI,OAAO,GAAG,EAAE,CAAC;AACjB,oBAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,IAC3C,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;AAC/C,2BAAO,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;AAC1C,2BAAO,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;iBAC/C;;AAED,oBAAI,IAAI,CAAC,iBAAiB,EAAE;AACxB,2BAAO,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;iBACpC;;AAED,uBAAO,OAAO,CAAC;aAClB;;;eA1EQ,UAAU","file":"http/HttpClient.js","sourcesContent":["import Request from 'superagent';\r\nimport {Promise} from 'es6-promise';\r\n\r\nexport class HttpClient {\r\n    constructor(metacoApiUrl, metacoApiId, metacoApiKey, metacoTestingMode) {\r\n        this.metacoApiId = metacoApiId;\r\n        this.metacoApiKey = metacoApiKey;\r\n        this.metacoApiUrl = metacoApiUrl;\r\n        this.metacoTestingMode = metacoTestingMode;\r\n    }\r\n\r\n    doGet(url) {\r\n\r\n        var self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Request\r\n                .get(self.getUrl(url))\r\n                .set(self.getHeaders())\r\n                .end(function (err, res) {\r\n                    if (res.status === 404) {\r\n                        reject();\r\n                    } else {\r\n                        resolve(JSON.parse(res.text));\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    doPost(url, data) {\r\n        return new Promise(function (resolve, reject) {\r\n            Request\r\n                .post(this.getUrl(url))\r\n                .send(data)\r\n                .set(this.getHeaders())\r\n                .end(function (err, res) {\r\n                    if (res.status === 404) {\r\n                        reject();\r\n                    } else {\r\n                        resolve(JSON.parse(res.text));\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    doDelete(url) {\r\n        return new Promise(function (resolve, reject) {\r\n            Request\r\n                .delete(getUrl(url))\r\n                .set(getHeaders())\r\n                .end(function (err, res) {\r\n                    if (res.status === 404) {\r\n                        reject();\r\n                    } else {\r\n                        resolve(JSON.parse(res.text));\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    getUrl(relativePart) {\r\n        return this.metacoApiUrl + relativePart;\r\n    }\r\n\r\n    getHeaders() {\r\n        var headers = {};\r\n        if (this.metacoApiId && this.metacoApiId !== \"\" &&\r\n            this.metacoApiKey && this.metacoApiKey !== \"\") {\r\n            headers[\"X-Metaco-Id\"] = this.metacoApiId;\r\n            headers[\"X-Metaco-Key\"] = this.metacoApiKey;\r\n        }\r\n\r\n        if (this.metacoTestingMode) {\r\n            headers[\"X-Metaco-Debug\"] = true;\r\n        }\r\n\r\n        return headers;\r\n    }\r\n}"],"sourceRoot":"/source/"}